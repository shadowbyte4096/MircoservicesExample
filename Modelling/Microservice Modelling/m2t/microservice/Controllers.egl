package assessment.controllers;

import java.net.URI;
import java.util.Optional;
import java.util.Set;

import javax.transaction.Transactional;

import io.micronaut.http.HttpResponse;
import io.micronaut.http.annotation.Body;
import io.micronaut.http.annotation.Controller;
import io.micronaut.http.annotation.Delete;
import io.micronaut.http.annotation.Get;
import io.micronaut.http.annotation.Post;
import io.micronaut.http.annotation.Put;
import jakarta.inject.Inject;
[%for (data in microservice.repositories){%]
import assessment.domain.[%=data.name%];
[%}%]
[%for (data in microservice.repositories){%]
import assessment.dto.[%=data.name%]DTO;
[%}%]
[%for (data in microservice.repositories){%]
import assessment.repositories.[%=data.name%]Repository;
[%}%]
[%if (microservice.producers.size() > 0){%]
import assessment.events.Producers;
[%}%]

@Controller("/[%=controller.subject.name.toLowerCase()%]")
public class [%=controller.name%] {

	[%for (data in microservice.repositories){%]
	
	@Inject
	[%=data.name%]Repository [%=data.name.toLowerCase()%]Repo;
	[%}%]
	
	[%if (microservice.producers.size() > 0){%]
	@Inject
	Producers producer;
	[%}%]
	[%for (action in controller.actions){
		var path = "@";
		if (action.isKindOf(Get)){
			path += "Get(";
		}else if (action.isKindOf(Post)){
			path += "Post(";
		}else if (action.isKindOf(Put)){
			path += "Put(";
		}else if (action.isKindOf(Delete)){
			path += "Delete(";
		}
		
		var params = action.parameters.concat(", ");
		%]
	
	[%=path%]"[%=action.path%]")
	public [%=action.`return`%] [%=action.name%]([%=params%]) {
		return null;
	}
	[%}%]
}