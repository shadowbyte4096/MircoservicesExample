package assessment.events;

import io.micronaut.configuration.kafka.annotation.KafkaClient;
import io.micronaut.configuration.kafka.annotation.KafkaKey;
import io.micronaut.configuration.kafka.annotation.Topic;
[%for (data in microservice.repositories){%]
import assessment.domain.[%=relation.name%];
[%}%]
	
@KafkaClient
public interface Producers {

	/*
	 * NOTE: this topic has to be created before we start the program, or we will
	 * have an error from Kafka Streams.
	 */
	 
	[%for (producer in microservice.producers){%]
	String TOPIC_[%=producer.name.toUpperCase()%] = "[%=producer.name%]";
	[%}%]
	[%for (producer in microservice.producers){%]
	
	@Topic(TOPIC_[%=producer.name.toUpperCase()%])
	void [%=producer.name%](@KafkaKey [%=out.startPreserve("/*", "*/", "validate-body", true)%]Long id, [%=producer.triggers.first.subject%] [%=producer.triggers.first.subject.toLowerCase()%][%=out.stopPreserve()%]);
	[%}%]
}